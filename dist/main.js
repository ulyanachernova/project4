/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/base.css":(e,t,o)=>{o.r(t)},"./src/data-books.js":(e,t,o)=>{o.r(t),o.d(t,{apiKey:()=>s,apiURL:()=>r,pageLoaded:()=>n});const r="https://www.googleapis.com/books/v1/volumes?q=search+terms",s="AIzaSyDx-mGbcsl9RXeb3RGdW-ed_GmKYGTWnM4",n=()=>{const e=document.querySelector(".active-nav-li");document.querySelector(".output");e.addEventListener("click",(function(){fetch(`https://www.googleapis.com/books/v1/volumes?q=subject:${e.value}`).then((e=>(console.log(e.json()),e.json()))).then((e=>{console.log(e)}))})),e.addEventListener("click",sendRequest)};document.addEventListener("DOMContentLoaded",n)}},t={};function o(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,o),n.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{o.r(r);o("./src/base.css"),o("./src/data-books.js");const e=document.querySelector(".slider-line"),t=document.querySelectorAll(".point"),s=document.querySelector(".promo-first"),n=document.querySelector(".promo-second");let c=0,l=0;const a=e=>{for(let e of t)e.classList.remove("active-point");t[e].classList.add("active-point")};t.forEach(((t,o)=>{t.addEventListener("click",(()=>{c=1120*o,e.style.left=-c+"px",l=o,a(l),i()}))})),s.addEventListener("click",(()=>{e.style.left="-1120px",l=1,a(l),i()})),n.addEventListener("click",(()=>{e.style.left="-2240px",l=2,a(l),i()}));let d=0;function i(){clearInterval(d),d=setInterval((function(){c<679*(t.length-1)?(c+=1120,l++):(c=0,l=0),e.style.left=-c+"px",a(l)}),5e3)}i()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,